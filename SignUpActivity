
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.Gravity;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.android.volley.AuthFailureError;
import com.android.volley.NetworkError;
import com.android.volley.NoConnectionError;
import com.android.volley.ParseError;
import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.ServerError;
import com.android.volley.TimeoutError;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.HashMap;
import java.util.Map;

public class SignUpActivity extends AppCompatActivity {
    EditText firstname, lastname, email, password, password2;
   
   // Path to sign up php file
   String irl = "http://192.168.0.30/signup.php";
    String mTolu,mail;
    Button button4;
    TextView textView7;
    CheckBox checkBox;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_sign_up);
        firstname = (EditText)findViewById(R.id.firstname);
        lastname = (EditText)findViewById(R.id.lastname);
        email = (EditText)findViewById(R.id.email);
        password = (EditText)findViewById(R.id.password);
        password2 = (EditText)findViewById(R.id.password2);
        button4 = (Button)findViewById(R.id.button4);
        textView7 = (TextView)findViewById(R.id.textView7);
        checkBox = (CheckBox)findViewById(R.id.checkBox);
       

    }

   
// Sign up button clicked
    public void sign (View view) {
        mail = email.getText().toString().toLowerCase();
        if (checkBox.isChecked()) {
            checkBox.setChecked(true);
            if (password.getText().toString().equals(password2.getText().toString())) {
                if (firstname.getText().toString().equals("")) {
                    Toast a = Toast.makeText(getApplicationContext(), "Firstname cannot be left empty", Toast.LENGTH_LONG);
                    a.setGravity(Gravity.CENTER, 0, 0);
                    a.show();
                } else if (lastname.getText().toString().equals("")) {
                    Toast b = Toast.makeText(getApplicationContext(), "Lastname cannot be left empty", Toast.LENGTH_LONG);
                    b.setGravity(Gravity.CENTER, 0, 0);
                    b.show();
                } else if (!email.getText().toString().matches("(.*)@(.*).(.*)")) {
                    Toast c = Toast.makeText(getApplicationContext(), "Invalid Email", Toast.LENGTH_LONG);
                    c.setGravity(Gravity.CENTER, 0, 0);
                    c.show();
                } else if (password.getText().toString().equals("")) {
                    Toast d = Toast.makeText(getApplicationContext(), "Password cannot be left empty", Toast.LENGTH_LONG);
                    d.setGravity(Gravity.CENTER, 0, 0);
                    d.show();
                } else {


                    sendToServer(firstname.getText().toString(), lastname.getText().toString(), mail, password.getText().toString());
                    firstname.setText("");
                    lastname.setText("");
                    email.setText("");
                    password.setText("");
                    password2.setText("");
                }
            } else {
                Toast e = Toast.makeText(getApplicationContext(), "Password mismatch: Please ensure that you enter same passwords in the two password columns", Toast.LENGTH_LONG);
                e.setGravity(Gravity.CENTER, 0, 0);
                e.show();

            }
        }
        else
        {
               Toast uv = Toast.makeText(getApplicationContext(),"Please accept the terms and conditions first",Toast.LENGTH_LONG);
            uv.setGravity(Gravity.CENTER,0,0);
            uv.show();
        }
    }
    



    public void sendToServer(final String first,final String last,final String em,final String pass){

        RequestQueue requestQueue = Volley.newRequestQueue(getApplicationContext());
        StringRequest stringRequest =  new StringRequest(Request.Method.POST, irl, new Response.Listener<String>() {
            @Override
            public void onResponse(String response) {
                try {
                    JSONObject jsonObject = new JSONObject(response);
                    if (jsonObject.has("response")){
                        button4.setEnabled(true);
                        button4.setText("SIGN UP");
                    mTolu = jsonObject.getString("response");
                    Intent i = new Intent(getApplicationContext(),MainActivity.class);
                       Toast a =  Toast.makeText(getApplicationContext(),mTolu,Toast.LENGTH_LONG);
                        a.setGravity(Gravity.CENTER,0,0);
                        a.show();
                        startActivity(i);
                    }
                    else if (jsonObject.has("aresponse")) {
                        mTolu = jsonObject.getString("aresponse");
                        Toast a =  Toast.makeText(getApplicationContext(),mTolu,Toast.LENGTH_LONG);
                        a.setGravity(Gravity.CENTER,0,0);
                        a.show();
                        button4.setEnabled(true);
                        button4.setText("SIGN UP");
                    }

                } catch (JSONException e) {
                    e.printStackTrace();
                }


            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                String message = null;
                if (error instanceof NetworkError) {
                    message = "Cannot connect to Internet...Please check your connection!";
                } else if (error instanceof ServerError) {
                    message = "The server could not be found. Please try again after some time!!";
                } else if (error instanceof AuthFailureError) {
                    message = "Cannot connect to Internet...Please check your connection!";
                } else if (error instanceof ParseError) {
                    message = "Parsing error! Please try again after some time!!";
                } else if (error instanceof TimeoutError) {
                    message = "Connection TimeOut! Please check your internet connection.";
                }

                if ( message!=null) {

                    // Show timeout error message
                    Toast a =  Toast.makeText(getApplicationContext(),message,Toast.LENGTH_LONG);
                    a.setGravity(Gravity.CENTER,0,0);
                    a.show();
                    button4.setEnabled(true);
                    button4.setText("SIGN UP");
                }
            }
        }){
            @Override
            protected Map<String, String> getParams() throws AuthFailureError {
                Map<String, String>  params = new HashMap<String, String>();
                params.put("firstname",first);
                params.put("lastname",last);
                params.put("email",em);
                params.put("password",pass);
                return params;
            }
        };
        requestQueue.add(stringRequest);
        button4.setEnabled(false);
        button4.setText("Connecting ...");
    }

   
}
